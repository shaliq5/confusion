[{"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\index.js":"1","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\reportWebVitals.js":"2","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\App.js":"3","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\MenuComponents.js":"4","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\dishes.js":"5","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\dishDetailsComponent.js":"6","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\MainComponent.js":"7","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\HeaderComponent.js":"8","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\FooterComponent.js":"9","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\HomeComponent.js":"10","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\ContactComponent.js":"11","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\comments.js":"12","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\leaders.js":"13","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\promotions.js":"14","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\AboutComponent.js":"15","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\configureStore.js":"16","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\dishes.js":"17","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\comments.js":"18","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\promotions.js":"19","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\leaders.js":"20","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\ActionTypes.js":"21","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\ActionCreators.js":"22"},{"size":639,"mtime":1612241269916,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":529,"mtime":1614260067040,"results":"26","hashOfConfig":"24"},{"size":1546,"mtime":1612968805052,"results":"27","hashOfConfig":"24"},{"size":1490,"mtime":1612274321734,"results":"28","hashOfConfig":"24"},{"size":7490,"mtime":1614353017841,"results":"29","hashOfConfig":"24"},{"size":2267,"mtime":1614351528686,"results":"30","hashOfConfig":"24"},{"size":5073,"mtime":1614159679913,"results":"31","hashOfConfig":"24"},{"size":2641,"mtime":1612263191631,"results":"32","hashOfConfig":"24"},{"size":1122,"mtime":1612366587452,"results":"33","hashOfConfig":"24"},{"size":9602,"mtime":1614263241963,"results":"34","hashOfConfig":"24"},{"size":4279,"mtime":1612274403608,"results":"35","hashOfConfig":"24"},{"size":2382,"mtime":1612274389655,"results":"36","hashOfConfig":"24"},{"size":445,"mtime":1612274379546,"results":"37","hashOfConfig":"24"},{"size":4359,"mtime":1613036284517,"results":"38","hashOfConfig":"24"},{"size":481,"mtime":1614349227906,"results":"39","hashOfConfig":"24"},{"size":182,"mtime":1614349459284,"results":"40","hashOfConfig":"24"},{"size":505,"mtime":1614352163207,"results":"41","hashOfConfig":"24"},{"size":197,"mtime":1614349346863,"results":"42","hashOfConfig":"24"},{"size":186,"mtime":1614349585652,"results":"43","hashOfConfig":"24"},{"size":43,"mtime":1614350093392,"results":"44","hashOfConfig":"24"},{"size":280,"mtime":1614350093393,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"19t10xd",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\index.js",[],["94","95"],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\reportWebVitals.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\App.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\MenuComponents.js",["96","97"],"import React from 'react';\r\nimport { Card, CardImg , CardImgOverlay , CardBody, CardText, CardTitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport { Link } from 'react-router-dom'; \r\n    function RenderMenuItem({dish, onClick}){\r\n        return(\r\n            <Card>\r\n                <Link to= {`/menu/${dish.id}`}>\r\n                    <CardImg width=\"100%\" object src={dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n        const menu = props.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                   <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        })\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Today's Special Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu} \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default Menu;","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\dishes.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\dishDetailsComponent.js",["98","99","100"],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\MainComponent.js",["101"],"import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Menu from './MenuComponents';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './dishDetailsComponent';\r\nimport { Switch, Route , Redirect, withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../redux/ActionCreators';\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n      dishes: state.dishes,\r\n      comments:state.comments,\r\n      promotions:state.promotions,\r\n      leaders:state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment))\r\n});\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props){\r\n    super(props); \r\n\r\n  }\r\n\r\n  render() {\r\n    const HomePage= () => {\r\n      return(\r\n        <Home dish={this.props.dishes.filter((dish) => dish.featured)[0]}\r\n        promotion={this.props.promotions.filter((promo) => promo.featured)[0]}\r\n        leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n        />\r\n      );\r\n    }\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          addComment={this.props.addComment}\r\n        />\r\n      );\r\n\r\n    }\r\n    return (\r\n      <div>\r\n        <Header />\r\n          <Switch>\r\n              <Route path='/home' component={HomePage} />\r\n              <Route exact path=\"/menu\" component={()=> <Menu dishes={this.props.dishes}/>} />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route exact path=\"/contact\" component={Contact} />\r\n              <Route exact path=\"/about\" component={() => <About leaders={this.props.leaders} />} />\r\n              <Redirect to=\"/home\" /> \r\n          </Switch>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  };\r\n  \r\n}\r\n\r\nexport default withRouter(connect(mapStatetoProps, mapDispatchToProps)(Main));\r\n","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\HeaderComponent.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\FooterComponent.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\HomeComponent.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\ContactComponent.js",["102","103","104","105","106","107","108","109"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current State is :\"+ JSON.stringify(values));\r\n        alert(\"Current State is :\"+ JSON.stringify(values));\r\n    }\r\n\r\n   render() {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                    <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h3>Send us your Feedback</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-9\">\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" className=\"form-control\" \r\n                                validators={{\r\n                                    required, minLength: minLength(3), maxLength:maxLength(15) \r\n                                }}\r\n                                />\r\n                                <Errors \r\n                                className=\"text-danger\"\r\n                                model=\".firstname\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required ',\r\n                                    minLength: 'Must be greater than 2 characters',\r\n                                    maxLength: 'Must be 15 characters or less'\r\n                                }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" className=\"form-control\" \r\n                                validators={{\r\n                                    required, minLength: minLength(3), maxLength:maxLength(15) \r\n                                }}\r\n                                />\r\n                                <Errors \r\n                                className=\"text-danger\"\r\n                                model=\".lastname\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required ',\r\n                                    minLength: 'Must be greater than 2 characters',\r\n                                    maxLength: 'Must be 15 characters or less'\r\n                                }}\r\n                                />  \r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Number</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".telnum\" type=\"tel\" id=\"telnum\" name=\"telnum\" placeholder=\"Contact Number\" className=\"form-control\" \r\n                                validators={{\r\n                                    required, minLength: minLength(7), maxLength:maxLength(15) , isNumber\r\n                                }}\r\n                                />\r\n                                <Errors \r\n                                className=\"text-danger\"\r\n                                model=\".telnum\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required ',\r\n                                    minLength: 'Must be greater than 6 numbers',\r\n                                    maxLength: 'Must be 15 numbers or less',\r\n                                    isNumber: 'Must be a number'\r\n                                }}\r\n                                />  \r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"email\" md={2}>Email Address</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email Address\" className=\"form-control\" \r\n                                validators={{\r\n                                    required, validEmail\r\n                                }}\r\n                                />\r\n                                <Errors \r\n                                className=\"text-danger\"\r\n                                model=\".email\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required ',\r\n                                    validEmail: 'Enter a valid email'\r\n                                }}\r\n                                />  \r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{size:5,offset:2}}>\r\n                                <div className=\"form-check\">\r\n                                    <Label check>\r\n                                        <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\" />\r\n                                        {' '} <strong>May we contact you?</strong>\r\n                                    </Label>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={{size:4,offset:1}}>\r\n                                <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                                    <option>Telephone</option>\r\n                                    <option>Email</option>\r\n                                </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                            <Col md={10}>\r\n                                <Control.textarea model=\".message\" id=\"message\" name=\"message\" placeholder=\"Enter your feedback.\" rows=\"5\" className=\"form-control\"/>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{size: 10, offset: 2}}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </LocalForm>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n   }  \r\n}\r\n\r\nexport default Contact;","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\comments.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\leaders.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\promotions.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\AboutComponent.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\configureStore.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\dishes.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\comments.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\promotions.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\leaders.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\ActionTypes.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\ActionCreators.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":2,"column":43,"nodeType":"116","messageId":"117","endLine":2,"endColumn":51},{"ruleId":"114","severity":1,"message":"118","line":2,"column":53,"nodeType":"116","messageId":"117","endLine":2,"endColumn":61},{"ruleId":"119","severity":1,"message":"120","line":90,"column":41,"nodeType":"121","endLine":91,"endColumn":70},{"ruleId":"119","severity":1,"message":"122","line":103,"column":41,"nodeType":"121","endLine":109,"endColumn":51},{"ruleId":"119","severity":1,"message":"123","line":125,"column":41,"nodeType":"121","endLine":127,"endColumn":72},{"ruleId":"124","severity":1,"message":"125","line":29,"column":3,"nodeType":"126","messageId":"127","endLine":32,"endColumn":4},{"ruleId":"128","severity":1,"message":"129","line":59,"column":25,"nodeType":"121","endLine":59,"endColumn":67},{"ruleId":"119","severity":1,"message":"122","line":73,"column":33,"nodeType":"121","endLine":77,"endColumn":35},{"ruleId":"119","severity":1,"message":"122","line":93,"column":33,"nodeType":"121","endLine":97,"endColumn":35},{"ruleId":"119","severity":1,"message":"122","line":113,"column":33,"nodeType":"121","endLine":117,"endColumn":35},{"ruleId":"119","severity":1,"message":"122","line":134,"column":33,"nodeType":"121","endLine":138,"endColumn":35},{"ruleId":"119","severity":1,"message":"130","line":154,"column":41,"nodeType":"121","endLine":154,"endColumn":118},{"ruleId":"119","severity":1,"message":"120","line":160,"column":33,"nodeType":"121","endLine":160,"endColumn":114},{"ruleId":"119","severity":1,"message":"123","line":169,"column":33,"nodeType":"121","endLine":169,"endColumn":166},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'CardBody' is defined but never used.","Identifier","unusedVar","'CardText' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]