[{"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\index.js":"1","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\reportWebVitals.js":"2","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\App.js":"3","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\MenuComponents.js":"4","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\dishes.js":"5","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\dishDetailsComponent.js":"6","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\MainComponent.js":"7","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\HeaderComponent.js":"8","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\FooterComponent.js":"9","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\HomeComponent.js":"10","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\ContactComponent.js":"11","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\comments.js":"12","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\leaders.js":"13","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\promotions.js":"14","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\AboutComponent.js":"15","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\configureStore.js":"16","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\dishes.js":"17","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\comments.js":"18","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\promotions.js":"19","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\leaders.js":"20","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\ActionTypes.js":"21","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\ActionCreators.js":"22","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\LoadingComponent.js":"23","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\forms.js":"24"},{"size":639,"mtime":1612241269916,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":529,"mtime":1614260067040,"results":"28","hashOfConfig":"26"},{"size":2242,"mtime":1614417028000,"results":"29","hashOfConfig":"26"},{"size":1490,"mtime":1612274321734,"results":"30","hashOfConfig":"26"},{"size":8066,"mtime":1614417798030,"results":"31","hashOfConfig":"26"},{"size":2775,"mtime":1614509919164,"results":"32","hashOfConfig":"26"},{"size":5073,"mtime":1614159679913,"results":"33","hashOfConfig":"26"},{"size":2641,"mtime":1612263191631,"results":"34","hashOfConfig":"26"},{"size":1445,"mtime":1614417821270,"results":"35","hashOfConfig":"26"},{"size":9654,"mtime":1614509918802,"results":"36","hashOfConfig":"26"},{"size":4279,"mtime":1612274403608,"results":"37","hashOfConfig":"26"},{"size":2382,"mtime":1612274389655,"results":"38","hashOfConfig":"26"},{"size":445,"mtime":1612274379546,"results":"39","hashOfConfig":"26"},{"size":4359,"mtime":1613036284517,"results":"40","hashOfConfig":"26"},{"size":791,"mtime":1614509919247,"results":"41","hashOfConfig":"26"},{"size":673,"mtime":1614417585426,"results":"42","hashOfConfig":"26"},{"size":505,"mtime":1614352163207,"results":"43","hashOfConfig":"26"},{"size":197,"mtime":1614349346863,"results":"44","hashOfConfig":"26"},{"size":186,"mtime":1614349585652,"results":"45","hashOfConfig":"26"},{"size":178,"mtime":1614415085654,"results":"46","hashOfConfig":"26"},{"size":795,"mtime":1614416895415,"results":"47","hashOfConfig":"26"},{"size":253,"mtime":1614417267576,"results":"48","hashOfConfig":"26"},{"size":174,"mtime":1614509440591,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"19t10xd",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\index.js",[],["102","103"],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\reportWebVitals.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\App.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\MenuComponents.js",["104","105"],"import React from 'react';\r\nimport { Card, CardImg , CardImgOverlay , CardBody, CardText, CardTitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport { Link } from 'react-router-dom'; \r\nimport { Loading } from './LoadingComponent';\r\n\r\n    function RenderMenuItem({dish, onClick}){\r\n        return(\r\n            <Card>\r\n                <Link to= {`/menu/${dish.id}`}>\r\n                    <CardImg width=\"100%\" object src={dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                   <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        })\r\n\r\n        if(props.dishes.isLoading)  {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Today's Special Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu} \r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default Menu;","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\dishes.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\dishDetailsComponent.js",["106","107","108"],"import React, {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,Modal, ModalHeader, ModalBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button , Row, Col, Label} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n\r\n\r\n    function RenderDish({dish}){\r\n        return(\r\n            \r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <Card>\r\n                <CardImg src={dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n        \r\n        );\r\n    }\r\n    \r\n    function RenderComments({comments, addComment, dishId}){\r\n        if(comments != null){\r\n            const commentListItems = comments.map((comment) =>{\r\n                return(\r\n                    <li key={comment.id}>\r\n                        <p>Rating - {comment.rating}</p>\r\n                        <p>{comment.comment}</p>\r\n                        <p>--{comment.author} , {new Intl.DateTimeFormat('en-US',{year : 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                    </li>   \r\n                );\r\n            });\r\n    \r\n            return(\r\n                <Card className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments : </h4>\r\n                <div className=\"container\">\r\n                <ul className=\"list-unstyled\">{commentListItems}</ul>\r\n                </div>\r\n                <CommentForm dishId={dishId} addComment={addComment} />\r\n                </Card>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div>\"ERROR 303\"</div>\r\n            );\r\n        }\r\n    }  \r\n    \r\n    class CommentForm extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n              isModalOpen:false\r\n            };\r\n            this.toggleModal=this.toggleModal.bind(this);\r\n            this.handleSubmit=this.handleSubmit.bind(this);\r\n          }\r\n          \r\n        toggleModal=()=>{\r\n            this.setState({\r\n                isModalOpen: !this.state.isModalOpen\r\n              });\r\n          }\r\n         \r\n          handleSubmit(values) {\r\n            this.toggleModal();\r\n            this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        }\r\n         \r\n        render() {\r\n            return (\r\n                <div>\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                        <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.select model=\".rating\" name=\"Rating\"\r\n                                            className=\"form-control\">\r\n                                            <option>1</option>\r\n                                            <option>2</option>\r\n                                            <option>3</option>\r\n                                            <option>4</option>\r\n                                            <option>5</option>\r\n                                        </Control.select>\r\n                                    </Col>\r\n                                </Row>\r\n                        <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"author\" md={2}>Your Name</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                            placeholder=\"Your Name\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                            }}\r\n                                                />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".author\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }}\r\n                                            />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"Comment\" md={2}>Comment</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                            rows=\"6\"\r\n                                            className=\"form-control\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={{size:1, offset: 2}}>\r\n                                        <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </LocalForm>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                    </div>\r\n            )\r\n        }\r\n    }    \r\n    \r\n    const DishDetail = (props) =>{\r\n        if(props.isLoading)  {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.dish!=null){\r\n        return(\r\n            <div className=\"container\" >\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments} addComment={props.addComment} dishId={props.dish.id} />\r\n                </div>\r\n            </div>\r\n        );\r\n        }\r\n        else{\r\n            return(<div></div>);\r\n        }\r\n        \r\n    }\r\n    \r\n\r\nexport default DishDetail;\r\n\r\n","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\MainComponent.js",["109"],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\HeaderComponent.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\FooterComponent.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\HomeComponent.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\ContactComponent.js",["110","111","112","113","114","115","116","117","118"],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\comments.js",[],["119","120"],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\leaders.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\promotions.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\AboutComponent.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\configureStore.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\dishes.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\comments.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\promotions.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\leaders.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\ActionTypes.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\ActionCreators.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\LoadingComponent.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\forms.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":2,"column":43,"nodeType":"127","messageId":"128","endLine":2,"endColumn":51},{"ruleId":"125","severity":1,"message":"129","line":2,"column":53,"nodeType":"127","messageId":"128","endLine":2,"endColumn":61},{"ruleId":"130","severity":1,"message":"131","line":91,"column":41,"nodeType":"132","endLine":92,"endColumn":70},{"ruleId":"130","severity":1,"message":"133","line":104,"column":41,"nodeType":"132","endLine":110,"endColumn":51},{"ruleId":"130","severity":1,"message":"134","line":126,"column":41,"nodeType":"132","endLine":128,"endColumn":72},{"ruleId":"135","severity":1,"message":"136","line":32,"column":3,"nodeType":"137","messageId":"138","endLine":35,"endColumn":4},{"ruleId":"125","severity":1,"message":"139","line":4,"column":32,"nodeType":"127","messageId":"128","endLine":4,"endColumn":39},{"ruleId":"140","severity":1,"message":"141","line":60,"column":25,"nodeType":"132","endLine":60,"endColumn":67},{"ruleId":"130","severity":1,"message":"133","line":74,"column":33,"nodeType":"132","endLine":78,"endColumn":35},{"ruleId":"130","severity":1,"message":"133","line":94,"column":33,"nodeType":"132","endLine":98,"endColumn":35},{"ruleId":"130","severity":1,"message":"133","line":114,"column":33,"nodeType":"132","endLine":118,"endColumn":35},{"ruleId":"130","severity":1,"message":"133","line":135,"column":33,"nodeType":"132","endLine":139,"endColumn":35},{"ruleId":"130","severity":1,"message":"142","line":155,"column":41,"nodeType":"132","endLine":155,"endColumn":118},{"ruleId":"130","severity":1,"message":"131","line":161,"column":33,"nodeType":"132","endLine":161,"endColumn":114},{"ruleId":"130","severity":1,"message":"134","line":170,"column":33,"nodeType":"132","endLine":170,"endColumn":166},{"ruleId":"121","replacedBy":"143"},{"ruleId":"123","replacedBy":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'CardBody' is defined but never used.","Identifier","unusedVar","'CardText' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["145"],["146"],"no-global-assign","no-unsafe-negation"]