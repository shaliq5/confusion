[{"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\index.js":"1","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\reportWebVitals.js":"2","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\App.js":"3","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\MenuComponents.js":"4","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\dishes.js":"5","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\dishDetailsComponent.js":"6","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\MainComponent.js":"7","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\HeaderComponent.js":"8","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\FooterComponent.js":"9","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\HomeComponent.js":"10","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\ContactComponent.js":"11","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\comments.js":"12","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\leaders.js":"13","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\promotions.js":"14","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\AboutComponent.js":"15","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\configureStore.js":"16","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\reducer.js":"17"},{"size":639,"mtime":1612241269916,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":529,"mtime":1614260067040,"results":"21","hashOfConfig":"19"},{"size":1546,"mtime":1612968805052,"results":"22","hashOfConfig":"19"},{"size":1490,"mtime":1612274321734,"results":"23","hashOfConfig":"19"},{"size":2540,"mtime":1612968204002,"results":"24","hashOfConfig":"19"},{"size":1988,"mtime":1614260067045,"results":"25","hashOfConfig":"19"},{"size":5073,"mtime":1614159679913,"results":"26","hashOfConfig":"19"},{"size":2641,"mtime":1612263191631,"results":"27","hashOfConfig":"19"},{"size":1122,"mtime":1612366587452,"results":"28","hashOfConfig":"19"},{"size":9401,"mtime":1613384287228,"results":"29","hashOfConfig":"19"},{"size":4279,"mtime":1612274403608,"results":"30","hashOfConfig":"19"},{"size":2382,"mtime":1612274389655,"results":"31","hashOfConfig":"19"},{"size":445,"mtime":1612274379546,"results":"32","hashOfConfig":"19"},{"size":4359,"mtime":1613036284517,"results":"33","hashOfConfig":"19"},{"size":233,"mtime":1614260067040,"results":"34","hashOfConfig":"19"},{"size":414,"mtime":1614260067379,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"19t10xd",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\index.js",[],["74","75"],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\reportWebVitals.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\App.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\MenuComponents.js",["76","77"],"import React from 'react';\r\nimport { Card, CardImg , CardImgOverlay , CardBody, CardText, CardTitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport { Link } from 'react-router-dom'; \r\n    function RenderMenuItem({dish, onClick}){\r\n        return(\r\n            <Card>\r\n                <Link to= {`/menu/${dish.id}`}>\r\n                    <CardImg width=\"100%\" object src={dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n        const menu = props.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                   <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        })\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Today's Special Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu} \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default Menu;","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\dishes.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\dishDetailsComponent.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\MainComponent.js",["78"],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\HeaderComponent.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\FooterComponent.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\HomeComponent.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\ContactComponent.js",["79"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: '',\r\n            contactType: 'Telephone',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname:false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n        }\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n        this.handleInputChange=this.handleInputChange.bind(this);\r\n        this.handleBlur=this.handleBlur.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target=event.target;\r\n        const value= target.type==='checkbox'? target.checked : target.value;\r\n        const name= target.name;\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log(\"Current State is :\"+ JSON.stringify(this.state));\r\n        alert(\"Current State is :\"+ JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: {...this.state.touched, [field] : true}\r\n        });\r\n    }\r\n\r\n    validate(firstname,lastname,telnum,email){\r\n        const errors= {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n\r\n        if(this.state.touched.firstname && firstname.length < 3){\r\n            errors.firstname = 'First name should be >= 3 Characters';\r\n        }\r\n        else if(this.state.touched.firstname && firstname.length > 10){\r\n            errors.firstname = 'First name should be <= 10 Characters';\r\n        }\r\n        if(this.state.touched.lastname && lastname.length < 3){\r\n            errors.lastname = 'Last name should be >= 3 Characters';\r\n        }\r\n        else if(this.state.touched.lastname && lastname.length > 10){\r\n            errors.lastname = 'Last name should be <= 10 Characters';\r\n        }\r\n        const reg= /^\\d+$/;\r\n        if(this.state.touched.telnum && !reg.test(telnum)){\r\n            errors.telnum = \"Enter a Valid Number\";\r\n        }\r\n\r\n        const re= /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(this.state.touched.email && !re.test(email) ){\r\n            errors.email= \"Enter a valid Email\";\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n   render() {\r\n       const errors = this.validate(this.state.firstname,this.state.lastname,this.state.telnum,this.state.email); \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                    <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h3>Send us your Feedback</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-9\">\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                            <Col md={10}>\r\n                                <Input type=\"text\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" value={this.state.firstname} valid={errors.firstname===''} invalid={errors.firstname!== ''} onBlur={this.handleBlur('firstname')} onChange={this.handleInputChange}/>\r\n                                <FormFeedback>{errors.firstname}</FormFeedback>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                            <Col md={10}>\r\n                                <Input type=\"text\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" value={this.state.lastname} valid={errors.lastname===''} invalid={errors.lastname!== ''} onBlur={this.handleBlur('lastname')} onChange={this.handleInputChange}/>\r\n                                <FormFeedback>{errors.lastname}</FormFeedback>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Number</Label>\r\n                            <Col md={10}>\r\n                                <Input type=\"tel\" id=\"telnum\" name=\"telnum\" placeholder=\"Contact Number\" value={this.state.telnum} valid={errors.telnum===''} invalid={errors.telnum!== ''} onBlur={this.handleBlur('telnum')} onChange={this.handleInputChange}/>\r\n                                <FormFeedback>{errors.telnum}</FormFeedback>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"email\" md={2}>Email Address</Label>\r\n                            <Col md={10}>\r\n                                <Input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email Address\" value={this.state.email} valid={errors.email===''} invalid={errors.email!== ''} onBlur={this.handleBlur('email')} onChange={this.handleInputChange}/>\r\n                                <FormFeedback>{errors.email}</FormFeedback>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Col md={{size:5,offset:2}}>\r\n                                <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"checkbox\" name=\"agree\" checked={this.state.agree} onChange={this.handleInputChange}/>\r\n                                        {' '} <strong>May we contact you?</strong>\r\n                                    </Label>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col md={{size:4,offset:1}}>\r\n                                <Input type=\"select\" name=\"contactType\" value={this.state.contactType} onChange={this.handleInputChange}>\r\n                                    <option>Telephone</option>\r\n                                    <option>Email</option>\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                            <Col md={10}>\r\n                                <Input type=\"textarea\" id=\"message\" name=\"message\" placeholder=\"Enter your feedback.\" rows=\"5\" value={this.state.message} onChange={this.handleInputChange}/>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Col md={{size: 10, offset: 2}}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                </Button>\r\n                            </Col>\r\n                        </FormGroup>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n   }  \r\n}\r\n\r\nexport default Contact;","D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\comments.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\leaders.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\shared\\promotions.js",[],["80","81"],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\components\\AboutComponent.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\configureStore.js",[],"D:\\Web Dev\\Coursera-1\\react\\confusion\\src\\redux\\reducer.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":43,"nodeType":"88","messageId":"89","endLine":2,"endColumn":51},{"ruleId":"86","severity":1,"message":"90","line":2,"column":53,"nodeType":"88","messageId":"89","endLine":2,"endColumn":61},{"ruleId":"91","severity":1,"message":"92","line":23,"column":3,"nodeType":"93","messageId":"94","endLine":26,"endColumn":4},{"ruleId":"95","severity":1,"message":"96","line":118,"column":25,"nodeType":"97","endLine":118,"endColumn":67},{"ruleId":"82","replacedBy":"98"},{"ruleId":"84","replacedBy":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'CardBody' is defined but never used.","Identifier","unusedVar","'CardText' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["100"],["101"],"no-global-assign","no-unsafe-negation"]